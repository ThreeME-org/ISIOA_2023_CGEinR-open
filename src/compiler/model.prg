a_3ME.append sav_h = inc * (1.0 - t_inc) - p * ch
a_3ME.append p_k * k = p_k(-1) * k(-1) * (1.0 - delta) + p(-1) * i(-1) 
a_3ME.append d(log(l_e)) = adjust_le_le1 * d(log(l_e(-1))) + adjust_le_l1 * d(log(l(-1))) + adjust_le_ln * d(log(l_n)) 
a_3ME.append p_n * y = c_y * y * (1.0 + m_up )
a_3ME.append d(log(div_e)) = adjust_dive_dive1 * d(log(div_e(-1))) + adjust_dive_div1 * d(log(div(-1))) + adjust_dive_divn * d(log(div_n)) 
a_3ME.append d(log(1.0 - sigma_n)) = rho_sigma_u * d(u) - rho_sigma_r * d(r) + rho_sigma_p * d(d(p) / p(-1)) - rho_sigma_debt * d(log(debt_g / (p * y))) 
a_3ME.append wealth = wealth(-1) + sav_h 
a_3ME.append d(r_debt_g) = d(r)
a_3ME.append m_up = adjust_m_up * m_up_n + (1.0 - adjust_m_up) * m_up(-1) 
a_3ME.append k = k(-1) * (1.0 - delta) + i(-1) 
a_3ME.append div_n = prof
a_3ME.append k_n = (y / prog_k) * ((phi_k) ^ rho_kl) * ((c_k / prog_k) / c_y) ^ (-rho_kl)
a_3ME.append log(div) = adjust_div_divn * log(div_n) + (1.0 - adjust_div_divn) * (log(div(-1)) + d(log(div_e)) ) 
a_3ME.append ch_n * p = (1.0 - sigma) * inc * (1.0 - t_inc)
a_3ME.append y = ch + i + g 
a_3ME.append c_y * y = w * l_n + c_k * k_n 
a_3ME.append log(p) = adjust_p_pn * log(p_n) + (1.0 - adjust_p_pn) * (log(p(-1)) + d(log(p_e)) ) 
a_3ME.append prof = p * y - w * l - c_k * k
a_3ME.append log(ch) = adjust_ch_chn * log(ch_n) + (1.0 - adjust_ch_chn) * (log(ch(-1)) + d(log(ch_e)) ) 
a_3ME.append d(r_n) = rho_rn_p * d(d(p) / p(-1)) - rho_rn_u * d(u)
a_3ME.append u = 1.0 - l / lf
a_3ME.append d(log(w)) = adjust_w_wn * d(log(w_n)) + adjust_w_w1 * d(log(w(-1))) - adjust_w_w1wn1 * log(w(-1) / w_n(-1)) 
a_3ME.append t_inc = adjust_t_inc * t_inc_n + (1.0 - adjust_t_inc) * t_inc(-1) 
a_3ME.append sav_g = t_inc * inc - p * g - debt_g(-1) * (phi_rd_g(-1) + r_debt_g(-1) )
a_3ME.append debt_f = debt_f(-1) * (1.0 - phi_rd_f(-1)) - sav_f
a_3ME.append d(log(p_e)) = adjust_pe_pe1 * d(log(p_e(-1))) + adjust_pe_p1 * d(log(p(-1))) + adjust_pe_pn * d(log(p_n)) 
a_3ME.append d(log(i)) = adjust_i_kn * d(log(k_n)) + adjust_i_i1 * d(log(i(-1))) + adjust_i_knk1 * log(k_n(-1) / k(-1)) - adjust_i_rk * d(r - d(p) / p(-1)) 
a_3ME.append d(log(1.0 + m_up_n )) = rho_mupn_ln * d(log(l_n / l)) + rho_mupn_kn * d(log(k_n / k)) 
a_3ME.append inc = (w * l + div )
a_3ME.append d(t_inc_n) = rho_tinc_debt * d(debt_g / (p * y))
a_3ME.append d(log(ch_e)) = adjust_che_che1 * d(log(ch_e(-1))) + adjust_che_ch1 * d(log(ch(-1))) + adjust_che_chn * d(log(ch_n)) 
a_3ME.append log(l) = adjust_l_ln * log(l_n) + (1.0 - adjust_l_ln) * (log(l(-1)) + d(log(l_e)) ) 
a_3ME.append r = adjust_r * r_n + (1.0 - adjust_r) * r(-1) 
a_3ME.append sigma = adjust_sigma * sigma_n + (1.0 - adjust_sigma) * sigma(-1) 
a_3ME.append d(log(w_n)) = rho_wn + rho_wn_pe * d(log(p_e)) + rho_wn_progl * d(log(prog_l)) - rho_wn_u * u - rho_wn_du * d(u) 
a_3ME.append sav_f = prof - div - p * i
a_3ME.append r_k * p_k * k = r_k(-1) * p_k(-1) * k(-1) * (1.0 - delta) + p(-1) * i(-1) * r(-1) 
a_3ME.append l_n = (y / prog_l) * ((phi_l) ^ rho_kl) * ((w / prog_l) / c_y) ^ (-rho_kl)
a_3ME.append debt_g = debt_g(-1) * (1.0 - phi_rd_g(-1)) - sav_g
a_3ME.append c_k * k = p_k(-1) * k(-1) * (delta + r_k(-1) )
